<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Project</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.0-2/css/all.min.css"
      integrity="sha256-46r060N2LrChLLb5zowXQ72/iKKNiw/lAmygmHExk/o="
      crossorigin="anonymous" />
    <link rel="stylesheet" href="/css/mystyle.css" />

    <style>
      body {
        width: 100%;
      }

      .content {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      form {
        width: 60vw;
        padding: 1rem !important;
      }

      .hero.is-small .hero-body {
        padding: 0.7rem;
        text-align: center;
      }
    </style>
  </head>
  <body>
    <%- include('../partials/navbar') %>

    <div class="content">
      <!-- The form action is set to the update route for the specific project -->
      <form id="edit-project-form" enctype="multipart/form-data">
        <div class="field">
          <label class="label">Nom</label>
          <div class="control">
            <input
              class="input"
              type="text"
              name="name"
              value="<%= project.name %>"
              placeholder="nom du projet" />
          </div>
        </div>

        <div class="field">
          <label class="label">Langages</label>
          <div class="control">
            <input
              class="input"
              type="text"
              name="langages"
              value="<%= project.langages %>"
              placeholder="html,css,etc" />
          </div>
        </div>

        <div class="field">
          <label class="label">Lien du Projet</label>
          <div class="control">
            <input
              class="input"
              type="text"
              name="link"
              value="<%= project.link %>"
              placeholder="http://google.com" />
          </div>
        </div>

        <div class="field">
          <label class="label">githubRepo URL</label>
          <div class="control">
            <input
              class="input"
              type="text"
              name="gitRepoUrl"
              value="<%= project.gitRepoUrl %>"
              placeholder="http://github.com" />
          </div>
        </div>

        <div class="field">
          <label class="label">Catégories</label>
          <div class="control">
            <div class="select is-multiple">
              <select name="categories" id="categories" multiple>
                <!-- Categories will be populated by JavaScript -->
              </select>
            </div>
          </div>
        </div>

        <div class="field">
          <label class="label">Backend Environnements</label>
          <div class="control">
            <input
              class="input"
              type="text"
              name="backend"
              value="<%= project.backend %>"
              placeholder="NodeJs,Firebase,php,mongoDb,SQL,postgreSql " />
          </div>
        </div>

        <div class="field">
          <label class="label">Description</label>
          <div class="control">
            <textarea
              name="description"
              class="textarea"
              placeholder="utiliser MARKDOWN (lightweight markup language) qui peut être converti en HTML/XHTML "><%= project.description %></textarea>
          </div>
        </div>

        <div class="field">
          <div class="file is-centered is-small is-boxed is-success has-name">
            <label class="file-label">
              <input class="file-input" type="file" name="imgUrl" />
              <span class="file-cta">
                <span class="file-icon">
                  <i class="fas fa-upload"></i>
                </span>
                <span class="file-label"> Choisir une image</span>
              </span>
              <span class="file-name">
                <%= project.imgUrl.split('/').pop() %>
              </span>
            </label>
          </div>
        </div>

        <div class="field">
          <label class="label">Image Preview</label>
          <img id="new-image-preview" width="300" class="image-preview" style="display: none;" />
        </div>

        <div class="field">
          <label class="label">Statut</label>
          <div class="control">
            <div class="select">
              <select name="statut" id="statut">
                <option value="to_do" <%= project.statut === 'to_do' ? 'selected' : '' %>>À faire</option>
                <option value="in_progress" <%= project.statut === 'in_progress' ? 'selected' : '' %>>En cours</option>
                <option value="finish" <%= project.statut === 'finish' ? 'selected' : '' %>>Terminé</option>
              </select>
            </div>
          </div>
        </div>

        <button type="submit" class="button is-primary is-center">
          Mettre à jour
        </button>
      </form>
    </div>

    <script>
       // Inject the project data into JavaScript context
      const project = <%- JSON.stringify(project) %>;

      const fileName = document.querySelector(".file-name");
      const fileInput = document.querySelector(".file-input");
      const newImagePreview = document.getElementById("new-image-preview");

      function previewImage(input) {
        if (typeof input === 'string') {
          // If input is a URL (string), set it directly to the image preview
          newImagePreview.src = input;
          newImagePreview.style.display = "block";
        } else if (input instanceof File) {
          // If input is a File object, use FileReader to display the preview
          const reader = new FileReader();
          reader.onload = function(event) {
            newImagePreview.src = event.target.result;
            newImagePreview.style.display = "block";
          };
          reader.readAsDataURL(input);
        } else {
          // Hide the preview if input is neither a file nor a string
          newImagePreview.style.display = "none";
        }
      }


      fileInput.addEventListener("change", (e) => {
        const file = e.target.files[0];
        previewImage(file);
      });

      // Fetch categories from the server and populate the select element
      document.addEventListener("DOMContentLoaded", async () => {
        const categoriesSelect = document.getElementById("categories");
        try {

          // Fetch categories from the server
          const response = await fetch("/api/categories");
          const categories = await response.json();

          categories.forEach((category) => {
            const option = document.createElement("option");
            option.value = category._id; // Use the category ID as the value
            option.textContent = category.name;
            if (project.categories.some(cat => cat._id === category._id)) {
              option.selected = true; // Pre-select if the project already has this category
            }
            categoriesSelect.appendChild(option);
          });

          // Enable the select dropdown once categories are loaded
          categoriesSelect.disabled = false;
        } catch (error) {
          console.error("Error fetching categories:", error);
          categoriesSelect.innerHTML =
            "<option>Error loading categories</option>";
        }
        previewImage(project.imgUrl);
      });

      document.getElementById('edit-project-form').addEventListener('submit', async function(event) {
      event.preventDefault(); // Prevent the default form submission

      const form = event.target;
      const formData = new FormData(form);

      try {
        const response = await fetch(`/api/projects/<%= project._id %>`, {
          method: 'PUT',
          body: formData
        });

        if (response.ok) {
          // If the update is successful, redirect to /projects-view
          window.location.href = '/projects-view';
        } else {
          // Handle errors if needed
          const errorData = await response.json();
          alert('Error updating project: ' + errorData.message);
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred while updating the project.');
      }
    });
    </script>
  </body>
</html>
